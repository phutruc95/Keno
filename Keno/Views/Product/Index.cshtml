@*@model IEnumerable<Keno.Model.Product>*@
@model PagedList.IPagedList<Keno.Model.Product>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Danh sách sản phẩm";
    List<Keno.Model.ProductType> lstProductType = ViewBag.ListProductType;
}

<link href="@Url.Content("~/Content/PagedList.css")" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="@Url.Content("~/Content/Home.css")">
<link rel="stylesheet" href="@Url.Content("~/Content/ProductList.css")">
<div class="container">
    <div class="row">
        @Html.Partial("_SideMenuPartial", lstProductType)
        <div class="col-md-9 lst-product">
            @if (Model != null && Model.Count() > 0)
            {
               foreach (var product in Model)
               {
                <div class="col-md-4">
                    <a href="@Url.Action("Details", "Product", new { id = product.ID })" style="text-decoration: none;">
                        <div class="product">
                            <div class="advertise-brick" style="height: 250px; background-image: url('@Url.Content(product.Image)'), url('@Url.Content("~/Content/Images/no-image-available.jpg")'); background-size: contain"></div>
                            <div class="product-name">@product.ProductName</div>
                            <div class="product-price">@(string.Format("{0:n0}", product.Price)) ₫</div>
                            <div class="product-rating">
                                <span><i class="fa fa-star"></i></span>
                                <span><i class="fa fa-star"></i></span>
                                <span><i class="fa fa-star"></i></span>
                                <span><i class="fa fa-star"></i></span>
                                <span><i class="fa fa-star-half-o"></i></span>
                            </div>
                            <p class="product-shortdesc" align="justify">
                                @(Keno.Utility.CommonFunction.ShortenString(product.ShortDesc, 100))
                            </p>
                        </div>
                    </a>                    
                </div>
               }
            }
            else
            {
                <div class="empty"></div>
            }
        </div>
    </div>

    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, searchStr = Request.QueryString["searchStr"], sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>


