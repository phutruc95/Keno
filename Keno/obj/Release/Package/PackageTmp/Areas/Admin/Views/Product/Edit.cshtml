@model Keno.Model.Product

@{
    ViewBag.Title = Model.ID == 0 ? "Thêm sản phẩm" : "Chỉnh sửa thông tin sản phẩm";
}

<h3>@(ViewBag.Title)</h3>

@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <hr />
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.UploaderID, new { @Value = User.Identity.Name })

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName)
                @Html.ValidationMessageFor(model => model.ProductName)
            </div>
        </div>

        @Html.HiddenFor(model => model.Image)
        <div class="form-group">
            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="image-displayer" style="height: 100px; width: auto; cursor: pointer;" src="@(!string.IsNullOrEmpty(Model.Image) ? Url.Content(Model.Image) : Url.Content("~/Content/Images/no-image-available.jpg"))" />
                <input type="file" id="image-uploader" name="imgFile" class="hidden" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url)
                @Html.ValidationMessageFor(model => model.Url)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDesc, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ShortDesc)
                @Html.ValidationMessageFor(model => model.ShortDesc)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Desc, new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Desc, new { rows = "5" })
                @Html.ValidationMessageFor(model => model.Desc)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Price, new { type = "number", min = "0", step = "500" })
                @Html.ValidationMessageFor(model => model.Price)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalePrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SalePrice, new { type = "number", min = "0", step = "500" })
                @Html.ValidationMessageFor(model => model.SalePrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsOnSale, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsOnSale)
                @Html.ValidationMessageFor(model => model.IsOnSale)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductTypeID, "Loại sản phẩm", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductTypeID", String.Empty)
                @Html.ValidationMessageFor(model => model.ProductTypeID)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/adminScript")
}

