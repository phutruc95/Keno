@model Keno.Models.ApplicationUser

@{
    ViewBag.Title = string.IsNullOrEmpty(Model.Id) ? "Thêm mới tài khoản người dùng" : "Chỉnh sửa tài khoản người dùng";
}

<h3>@ViewBag.Title</h3>

@using (Html.BeginForm("Edit", "User"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.PasswordHash)
        @Html.HiddenFor(model => model.SecurityStamp)

        <div class="form-group">
            @Html.Label("Tên đăng nhập", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (!string.IsNullOrEmpty(Model.UserName))
                {
                    @Html.TextBoxFor(model => model.UserName, new { disabled = "disabled" })
                }
                else
                {
                    @Html.EditorFor(model => model.UserName)
                }

                @Html.ValidationMessageFor(model => model.UserName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
