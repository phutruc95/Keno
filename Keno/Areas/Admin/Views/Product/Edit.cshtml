@model Keno.Model.Product

@{
    ViewBag.Title = Model.ID == 0 ? "Thêm sản phẩm" : "Chỉnh sửa thông tin sản phẩm";
}

<h3>@(ViewBag.Title)</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <hr />
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName)
                @Html.ValidationMessageFor(model => model.ProductName)
            </div>
        </div>

        @Html.HiddenFor(model => model.Image)
        <div class="form-group">
            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="image-displayer" style="height: 100px; width: auto; cursor: pointer;" src="@(Model != null && !string.IsNullOrEmpty(Model.Image) ? Model.Image : Url.Content("~/Content/Images/img-err.png"))" />
                <input type="file" id="image-uploader" name="image-uploader" class="hidden" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url)
                @Html.ValidationMessageFor(model => model.Url)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Price, new { type = "number", min = "0", step = "500" })
                @Html.ValidationMessageFor(model => model.Price)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalePrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SalePrice, new { type = "number", min = "0", step = "500" })
                @Html.ValidationMessageFor(model => model.SalePrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsOnSale, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsOnSale)
                @Html.ValidationMessageFor(model => model.IsOnSale)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductTypeID, "Loại sản phẩm", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductTypeID", String.Empty)
                @Html.ValidationMessageFor(model => model.ProductTypeID)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#image-uploader').change(function () {
                var file = this.files[0];
                var reader = new FileReader();
                reader.readAsDataURL(file);

                reader.onload = function () {
                    var dataURL = reader.result;
                    //$('input[name=Image]').val(dataURL);
                    $('#image-displayer').attr('src', dataURL);
                };               
            });

            $('#image-displayer').on('click', function () {
                $('#image-uploader').trigger('click');
            });
        });
    </script>
}

